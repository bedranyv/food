{"version":3,"sources":["webpack://food.loc/./js/modules/calc.js","webpack://food.loc/./js/modules/cards.js","webpack://food.loc/./js/modules/forms.js","webpack://food.loc/./js/modules/modal.js","webpack://food.loc/./js/modules/slider.js","webpack://food.loc/./js/modules/tabs.js","webpack://food.loc/./js/modules/timer.js","webpack://food.loc/webpack/bootstrap","webpack://food.loc/./js/script.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA,sB;;;;;;;;;;AC3HA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA,2BAA2B,YAAY,QAAQ,YAAY;AAC3D,8CAA8C,WAAW;AACzD,4CAA4C,WAAW;AACvD;AACA;AACA;AACA,sDAAsD,WAAW;AACjE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA,2BAA2B,YAAY,QAAQ,YAAY;AAC3D,8CAA8C,WAAW;AACzD,4CAA4C,WAAW;AACvD;AACA;AACA;AACA,sDAAsD,WAAW;AACjE;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C,IAAI,YAAY,WAAW;AAC1E;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,iCAAiC;AACxD;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,iCAAiC;AAChE;AACA,YAAY;AACZ,QAAQ;AACR;;AAEA,uB;;;;;;;;;;ACzKA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4DAA4D;AAC5D,4CAA4C,QAAQ;AACpD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;;AAGT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;;AAEA;AACA;;AAEA;AACA,gDAAgD;;AAEhD;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;;AAET;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;;AAEA,gDAAgD;;AAEhD;AACA;;AAEA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,aAAa;AACb;AACA,aAAa;AACb;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;;AAEA,uB;;;;;;;;;;AC1LA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,gDAAgD;;AAEhD,oCAAoC;AACpC,K;;AAEA;AACA;AACA,KAAK;;;AAGL;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uB;;;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iCAAiC,QAAQ;AACzC,SAAS;AACT;AACA;AACA;;AAEA;;AAEA;AACA,2D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,2D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gCAAgC,cAAc;AAC9C,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,sCAAsC,WAAW;AACjD,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,gCAAgC,cAAc;AAC9C,kCAAkC,WAAW;AAC7C,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,KAAK;;AAEL;AACA,qDAAqD,OAAO;;AAE5D;AACA,sCAAsC,WAAW;AACjD,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA,mBAAmB,mBAAmB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA,8BAA8B,aAAa;AAC3C;AACA;AACA;AACA,KAAK;AACL;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AChQA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;;AAEA,oCAAoC;AACpC,kDAAkD;AAClD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,sC;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;;AAEA,sB;;;;;;;;;;AC7CA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB;AACtB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uB;;;;;;UC7DA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBa;;AAEb,mD;AACA,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,iBAAiB,mBAAO,CAAC,4CAAgB;AACzC,kBAAkB,mBAAO,CAAC,8CAAiB;AAC3C,mBAAmB,mBAAO,CAAC,gDAAkB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC,E","file":"bundle.js","sourcesContent":["function calc() {\r\n        ///////////////////////////////////////////////////////////////////////////\r\n    // КАЛЬКУЛЯТОР\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    const result = document.querySelector('.calculating__result span');\r\n    \r\n    let sex, height, weight, age, ratio;\r\n\r\n    // если есть данные в localStorage, то присваиваем значениям sex и ratio эти данные\r\n    // если данных нет, то ставим значения по умолчанию - female и 1.375\r\n    if (localStorage.getItem('sex')) {\r\n        sex = localStorage.getItem('sex');\r\n    } else {\r\n        sex = 'female';\r\n        localStorage.setItem('sex', 'female');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio = localStorage.getItem('ratio');\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', 1.375);\r\n    }\r\n\r\n    // инициализация начальных значений - переключение активных классов исходя из начальных данных\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.classList.remove(activeClass);\r\n            if (elem.getAttribute('id') === localStorage.getItem('sex')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n            if (elem.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                elem.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n    \r\n    // функция, которая отвечает за пересчет суточной нормы калорий\r\n    function calcTotal() {\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = '____';\r\n            return;\r\n        }\r\n    \r\n        if (sex == 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n    \r\n    calcTotal();\r\n\r\n    // функция, которая отслеживает нажатия на плашки физической активности, изменяет активные классы\r\n    // и присваивает значение переменным sex и ratio\r\n    function getStaticInformation(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', +e.target.getAttribute('data-ratio'));\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n    \r\n                elements.forEach(elem => {\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n    \r\n                e.target.classList.add(activeClass);\r\n    \r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n\r\n    // функция, которая отслеживает введенные данные в инпуты (рост, вес, возраст), присваивает значения\r\n    // переменным height, weight и age\r\n    function getDynamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = '1px solid red';\r\n            } else {\r\n                input.style.border = 'none';\r\n            }\r\n\r\n           switch(input.getAttribute('id')) {\r\n                case 'height':\r\n                     height = +input.value;\r\n                    break;\r\n                case 'weight':\r\n                    weight = +input.value;\r\n                    break;\r\n                case 'age':\r\n                    age = +input.value;\r\n                    break;\r\n           }\r\n\r\n           calcTotal();\r\n        });\r\n    }\r\n\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n}\r\n\r\nmodule.exports = calc;","function cards() {\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // СОЗДАНИЕ КАРТОЧЕК МЕНЮ С ПОМОЩЬЮ КЛАССОВ\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    ///////////\r\n    // ВАРИАНТ С ДАННЫМИ ДЛЯ КАРТОЧЕК В JS ФАЙЛЕ\r\n    ////////////\r\n/*\r\n    const menuField = document.querySelector('.menu__field'),\r\n          menuContainer = menuField.querySelector('.container');\r\n\r\n    class ItemMenu {\r\n        constructor(imgSrc, imgAlt, title, descr, price, ...classes) {\r\n            this.imgSrc = imgSrc;\r\n            this.imgAlt = imgAlt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.transfer = 28;\r\n            this.changeToUAH();\r\n        }\r\n\r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        itemRender() {\r\n            const menuItem = document.createElement('div');\r\n            // если класс не будет задан пользователем (this.classes.length === 0), то автоматом подставится menu__item,\r\n            // иначе будет перебираться массив с введенными классами и эти классы будут добавляться новосозданному DIVу\r\n            if (this.classes.length === 0) {\r\n                this.classes = 'menu__item';\r\n                menuItem.classList.add(this.classes);\r\n            } else {\r\n                this.classes.forEach(item => {\r\n                    menuItem.classList.add(item);\r\n                });\r\n            }\r\n            \r\n            menuItem.innerHTML = `\r\n                <img src=${this.imgSrc} alt=\"${this.imgAlt}\">\r\n            <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n            <div class=\"menu__item-descr\">${this.descr}</div>\r\n            <div class=\"menu__item-divider\"></div>\r\n            <div class=\"menu__item-price\">\r\n                <div class=\"menu__item-cost\">Цена:</div>\r\n                <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n            </div>`;\r\n            menuContainer.append(menuItem);\r\n\r\n        }\r\n    }\r\n\r\n    // ВАРИАНТ №1:\r\n    // const newMenu = new ItemMenu(\r\n    //     'img/tabs/vegy.jpg', \r\n    //     'vegy', \r\n    //     'Меню \"Новое\"', \r\n    //     'Меню \"Новое\" - это новое меню, которое вы съедите за 5 минут', \r\n    //     9\r\n    // );\r\n    // newMenu.itemRender();\r\n\r\n    // ВАРИАНТ № 2 (без создания переменной):\r\n    new ItemMenu(\r\n        'img/tabs/vegy.jpg', \r\n        'vegy', \r\n        'Меню \"Фитнес\"', \r\n        'Меню \"Фитнес\" - это новый подход к приготовлению блюд: больше свежих овощей и фруктов. Продукт активных и здоровых людей. Это абсолютно новый продукт с оптимальной ценой и высоким качеством!', \r\n        8,\r\n        'menu__item'\r\n    ).itemRender();\r\n\r\n    new ItemMenu(\r\n        'img/tabs/elite.jpg', \r\n        'elite', \r\n        'Меню “Премиум”', \r\n        'В меню “Премиум” мы используем не только красивый дизайн упаковки, но и качественное исполнение блюд. Красная рыба, морепродукты, фрукты - ресторанное меню без похода в ресторан!', \r\n        19,\r\n        'menu__item'\r\n    ).itemRender();\r\n\r\n    new ItemMenu(\r\n        'img/tabs/post.jpg', \r\n        'post', \r\n        'Меню \"Постное\"', \r\n        'Меню “Постное” - это тщательный подбор ингредиентов: полное отсутствие продуктов животного происхождения, молоко из миндаля, овса, кокоса или гречки, правильное количество белков за счет тофу и импортных вегетарианских стейков.', \r\n        14\r\n    ).itemRender();\r\n*/\r\n    ///////////\r\n    // ВАРИАНТ С ДАННЫМИ ИЗ ФАЙЛА DB.JSON\r\n    ///////////\r\n    \r\n    const menuField = document.querySelector('.menu__field'),\r\n          menuContainer = menuField.querySelector('.container');\r\n\r\n    class ItemMenu {\r\n        constructor(imgSrc, imgAlt, title, descr, price, ...classes) {\r\n            this.imgSrc = imgSrc;\r\n            this.imgAlt = imgAlt;\r\n            this.title = title;\r\n            this.descr = descr;\r\n            this.price = price;\r\n            this.classes = classes;\r\n            this.transfer = 28;\r\n            this.changeToUAH();\r\n        }\r\n\r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer;\r\n        }\r\n\r\n        itemRender() {\r\n            const menuItem = document.createElement('div');\r\n            // если класс не будет задан пользователем (this.classes.length === 0), то автоматом подставится menu__item,\r\n            // иначе будет перебираться массив с введенными классами и эти классы будут добавляться новосозданному DIVу\r\n            if (this.classes.length === 0) {\r\n                this.classes = 'menu__item';\r\n                menuItem.classList.add(this.classes);\r\n            } else {\r\n                this.classes.forEach(item => {\r\n                    menuItem.classList.add(item);\r\n                });\r\n            }\r\n            \r\n            menuItem.innerHTML = `\r\n                <img src=${this.imgSrc} alt=\"${this.imgAlt}\">\r\n            <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n            <div class=\"menu__item-descr\">${this.descr}</div>\r\n            <div class=\"menu__item-divider\"></div>\r\n            <div class=\"menu__item-price\">\r\n                <div class=\"menu__item-cost\">Цена:</div>\r\n                <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n            </div>`;\r\n            menuContainer.append(menuItem);\r\n\r\n        }\r\n    }\r\n\r\n    const getResource = async (url) => {\r\n        const res = await fetch(url);\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n        return await res.json();\r\n    };\r\n\r\n    getResource('http://localhost:3000/menu')\r\n    .then(data => {\r\n        data.forEach(({img, altimg, title, descr, price}) => {\r\n            new ItemMenu(img, altimg, title, descr, price).itemRender();\r\n        });\r\n    });\r\n\r\n    // ЛИБО С ПОМОЩЬЮ БИБЛИОТЕКИ AXIOS\r\n    // (подключить в index.html:\r\n    // <script src=\"http://cdn.jsdelivr.net/npm/axios/dist/axios.min.js\"></script>)\r\n    // \r\n    // axios.get('http://localhost:3000/menu')\r\n    // .then(data => {\r\n    //     data.data.forEach(({img, altimg, title, descr, price}) => {\r\n    //         new ItemMenu(img, altimg, title, descr, price).itemRender();\r\n    //     });\r\n    // });\r\n}\r\n\r\nmodule.exports = cards;","function forms() {\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // FORMS\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    const forms = document.querySelectorAll('form');\r\n\r\n    const message = {\r\n        loading: 'img/form/spinner.svg',\r\n        success: 'Спасибо! Скоро мы с вами свяжемся',\r\n        failure: 'Ошибка'\r\n    };\r\n\r\n    forms.forEach(item => {\r\n        bindPostData(item);\r\n    });\r\n\r\n    function showThanksModal(message) {\r\n        const prevModalDialog = document.querySelector('.modal__dialog');\r\n\r\n        prevModalDialog.classList.add('hide');\r\n        prevModalDialog.classList.remove('show');\r\n        openModal();\r\n\r\n        const thanksModal = document.createElement('div');\r\n        thanksModal.classList.add('modal__dialog');\r\n        thanksModal.innerHTML = `\r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>&times;</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;\r\n\r\n        document.querySelector('.modal').append(thanksModal);\r\n        \r\n        const timerThanksModal = setTimeout(() => {\r\n            thanksModal.remove();\r\n            prevModalDialog.classList.add('show');\r\n            prevModalDialog.classList.remove('hide');\r\n            closeModal();\r\n        }, 4000);\r\n        \r\n        \r\n    }\r\n\r\n    // Вариант с XML передачей данных\r\n    /*\r\n    function postData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n\r\n            const statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;\r\n            // form.append(statusMessage); или так:\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n            const request = new XMLHttpRequest();\r\n            request.open('POST', 'server.php');\r\n\r\n            // При связке XML и formData - заголовок не нужен\r\n            // request.setRequestHeader('Content-type', 'multipart/form-data');\r\n            const formData = new FormData(form);\r\n\r\n            request.send(formData);\r\n\r\n            request.addEventListener('load', () => {\r\n                if (request.status === 200) {\r\n                    console.log(request.response);\r\n                    statusMessage.textContent = message.success;\r\n                    form.reset();\r\n                    setTimeout(() => {\r\n                        statusMessage.remove();\r\n                    }, 2000);\r\n                } else {\r\n                    statusMessage.textContent = message.failure;\r\n                }\r\n            });\r\n        });\r\n    }\r\n    */\r\n\r\n    // Вариант с JSON передачей данных\r\n    // Для использования раскомментировать вторую строчку в server.php \r\n    /*\r\n    function postData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n\r\n            const statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;\r\n            // form.append(statusMessage); или так:\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n            const request = new XMLHttpRequest();\r\n            request.open('POST', 'server.php');\r\n\r\n            request.setRequestHeader('Content-type', 'application/json');\r\n            const formData = new FormData(form);  // сбор данных из формы\r\n\r\n            const object = {};\r\n            formData.forEach(function(value, key) {\r\n                object[key] = value;\r\n            });\r\n\r\n            const json = JSON.stringify(object);\r\n\r\n            request.send(json);\r\n\r\n            request.addEventListener('load', () => {\r\n                if (request.status === 200) {\r\n                    console.log(request.response);\r\n                    showThanksModal(message.success);\r\n                    form.reset();\r\n                    statusMessage.remove();\r\n                } else {\r\n                    showThanksModal(message.failure);\r\n                }\r\n            });\r\n        });\r\n    }\r\n       */\r\n\r\n    const postData = async (url, data) => {\r\n        const res = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: data\r\n        });\r\n\r\n        return await res.json();\r\n    };\r\n\r\n    // FETCH API\r\n    function bindPostData(form) {\r\n        form.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n\r\n            const statusMessage = document.createElement('img');\r\n            statusMessage.src = message.loading;\r\n            statusMessage.style.cssText = `\r\n                display: block;\r\n                margin: 0 auto;\r\n            `;\r\n            // form.append(statusMessage); или так:\r\n            form.insertAdjacentElement('afterend', statusMessage);\r\n\r\n            const formData = new FormData(form); // сбор данных из формы\r\n\r\n            // превращаем полученные данные с формы в массив-массивов, потом в объект и потом в JSON формат\r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));\r\n\r\n            // Пример действия выше\r\n            // const ooo = {'a': 1, 'b': 2};\r\n            // const ooo2 = Object.entries(ooo);\r\n            // console.log(ooo2);\r\n            // const ooo3 = Object.fromEntries(ooo2);\r\n            // console.log(ooo3);\r\n            // const ooo4 = JSON.stringify(ooo3);\r\n            // console.log(ooo4);\r\n\r\n            postData('http://localhost:3000/requests', json)\r\n            .then(data => {\r\n                console.log(data);\r\n                showThanksModal(message.success);\r\n                \r\n                statusMessage.remove();\r\n            }).catch(() => {\r\n                showThanksModal(message.failure);\r\n            }).finally(() => {\r\n                form.reset();\r\n            });\r\n        });\r\n    }\r\n    // */    \r\n}\r\n\r\nmodule.exports = forms;","function modal() {\r\n        ///////////////////////////////////////////////////////////////////////////\r\n    // MODAL\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    const modalOpenBtn = document.querySelectorAll('[data-modal]'),\r\n        //   modalCloseBtn = document.querySelector('[data-close]'),\r\n          modal = document.querySelector('.modal');\r\n\r\n    function openModal() {\r\n        modal.classList.add('show');\r\n        modal.classList.remove('hide');\r\n\r\n        document.body.style.overflow = 'hidden'; // убрать прокрутку страницы\r\n\r\n        clearInterval(modalTimerId); // убираем открытия модалки автоматом, если оно уже было открыто\r\n    }  \r\n          \r\n    modalOpenBtn.forEach(btn => {\r\n        btn.addEventListener('click', openModal);\r\n    });\r\n\r\n\r\n    function closeModal() {\r\n        modal.classList.add('hide');\r\n        modal.classList.remove('show');\r\n\r\n        document.body.style.overflow = '';\r\n    }\r\n\r\n    // modalCloseBtn.addEventListener('click', closeModal);\r\n\r\n    // закрытие модалки при клике на подложку или крестик\r\n    modal.addEventListener('click', (e) => {\r\n        if (e.target === modal || e.target.getAttribute('data-close') == '') {\r\n            closeModal();\r\n        }\r\n    });\r\n\r\n    // закрытие модалки при клике на кливишу ESC\r\n    document.addEventListener('keydown', (e) => {\r\n        if (e.code === 'Escape' && modal.classList.contains('show')) {\r\n            closeModal();\r\n        }\r\n    });\r\n\r\n    // открытие модалки автоматом через время\r\n    const modalTimerId = setTimeout(openModal, 50000);\r\n\r\n    function showModalByScroll() {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            // прокрученная часть + высота видимой части больше или равно высоте всего документа\r\n            openModal();\r\n\r\n            // выполнение события только 1 раз\r\n            window.removeEventListener('scroll', showModalByScroll);\r\n        }\r\n    }\r\n\r\n    // открытие модалки при долистывания до низа страницы\r\n    window.addEventListener('scroll', showModalByScroll);\r\n}\r\n\r\nmodule.exports = modal;","function slider() {\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // SLIDER (МОЯ ВЕРСИЯ)\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    /*\r\n    const sliderArea = document.querySelector('.offer__slider'),\r\n          counterCurrentArea = sliderArea.querySelector('#current'),\r\n          counterTotalArea = sliderArea.querySelector('#total'),\r\n          slidersItems = sliderArea.querySelectorAll('.offer__slide'),\r\n          btnSliderPrev = sliderArea.querySelector('.offer__slider-prev'),\r\n          btnSliderNext = sliderArea.querySelector('.offer__slider-next');\r\n    \r\n    let slideIndex = 1;\r\n    let slideTotal = slidersItems.length;\r\n\r\n    function sliderFirst() {\r\n        slidersItems.forEach(slider => {\r\n            slider.classList.add('hide');\r\n        });\r\n        slidersItems[0].classList.remove('hide');\r\n \r\n        counterDecor(slideIndex, counterCurrentArea);\r\n        counterDecor(slideTotal, counterTotalArea);\r\n    }\r\n\r\n    function counterDecor(counter, area) {\r\n        if (counter < 10) {\r\n            area.innerHTML = `0${counter}`;\r\n        } else {\r\n            area.innerHTML = counter;\r\n        }\r\n    }\r\n\r\n    sliderFirst();\r\n\r\n    btnSliderNext.addEventListener('click', () => {\r\n        slidersItems[slideIndex - 1].classList.add('hide');  \r\n        if (slideIndex >= slideTotal) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n        slidersItems[slideIndex - 1].classList.remove('hide');\r\n          \r\n        counterDecor(slideIndex, counterCurrentArea);\r\n    });\r\n\r\n    btnSliderPrev.addEventListener('click', () => {\r\n        slidersItems[slideIndex - 1].classList.add('hide');  \r\n        if (slideIndex == 1) {\r\n            slideIndex = slideTotal;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n        slidersItems[slideIndex - 1].classList.remove('hide');\r\n          \r\n        counterDecor(slideIndex, counterCurrentArea);\r\n    });\r\n    */\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // SLIDER (ВЕРСИЯ ИВАНА ПЕТРИЧЕНКО)\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    /*\r\n    const slides = document.querySelectorAll('.offer__slide'),\r\n          prev = document.querySelector('.offer__slider-prev'),\r\n          next = document.querySelector('.offer__slider-next'),\r\n          total = document.querySelector('#total'),\r\n          current = document.querySelector('#current');\r\n    let slideIndex = 1;\r\n\r\n    showSlides(slideIndex);\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n    }\r\n\r\n    function showSlides(n) {\r\n        if (n > slides.length) {\r\n            slideIndex = 1;\r\n        }\r\n\r\n        if (n < 1) {\r\n            slideIndex = slides.length;\r\n        }\r\n\r\n        slides.forEach(item => item.style.display = 'none');\r\n\r\n        slides[slideIndex - 1].style.display = 'block';\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n    }\r\n\r\n    function plusSlides(n) {\r\n        showSlides(slideIndex += n);\r\n    }\r\n\r\n    prev.addEventListener('click', () => {\r\n        plusSlides(-1);\r\n    });\r\n\r\n    next.addEventListener('click', () => {\r\n        plusSlides(1);\r\n    });\r\n    */\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // SLIDER В ВИДЕ КАРУСЕЛИ\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // /*\r\n    const slides = document.querySelectorAll('.offer__slide'),\r\n          prev = document.querySelector('.offer__slider-prev'),\r\n          next = document.querySelector('.offer__slider-next'),\r\n          total = document.querySelector('#total'),\r\n          current = document.querySelector('#current'),\r\n          slidesWrapper = document.querySelector('.offer__slider-wrapper'),\r\n          slidesField = document.querySelector('.offer__slider-inner'),\r\n          width = window.getComputedStyle(slidesWrapper).width;\r\n\r\n    let slideIndex = 1;\r\n    let offset = 0;\r\n\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent = `0${slideIndex}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent = slideIndex;\r\n    }\r\n\r\n    slidesField.style.width = 100 * slides.length + '%';\r\n    slidesField.style.display = 'flex';\r\n    slidesField.style.transition = '0.5s all';\r\n\r\n    slidesWrapper.style.overflow = 'hidden';\r\n\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    function delNotDigits(str) {\r\n        return +str.replace(/\\D/g, '');\r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n        // if (offset == +width.replace(/\\D/g, '') * (slides.length - 1)) {\r\n        if (offset == delNotDigits(width) * (slides.length - 1)) {\r\n            offset = 0;\r\n        } else {\r\n            // offset += +width.replace(/\\D/g, '');\r\n            offset += delNotDigits(width);\r\n        }\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        changeSlide(slideIndex, offset);\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        if (offset == 0) {\r\n            // offset = +width.replace(/\\D/g, '') * (slides.length - 1);\r\n            offset = delNotDigits(width) * (slides.length - 1);\r\n        } else {\r\n            // offset -= +width.replace(/\\D/g, '');\r\n            offset -= delNotDigits(width);\r\n        }\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        changeSlide(slideIndex, offset);\r\n    });\r\n\r\n    function changeSlide(slideIndex, offset) {\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slides.length < 10) {\r\n            current.textContent = `0${slideIndex}`;\r\n        } else {\r\n            current.textContent = slideIndex;\r\n        }\r\n\r\n        dots.forEach(dot => dot.style.opacity = '0.5');\r\n        dots[slideIndex - 1].style.opacity = 1;\r\n    }\r\n\r\n    // */\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // НАВИГАЦИЯ ТОЧКИ НА СЛАЙДЕРЕ\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // const slidesWrapper = document.querySelector('.offer__slider-wrapper');\r\n    slidesWrapper.style.position = 'relative';\r\n\r\n    const dottesArea = document.createElement('ol'),\r\n          dots = [];\r\n\r\n    dottesArea.classList.add('carousel-indicators');\r\n\r\n    slidesWrapper.append(dottesArea);\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n        let dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        dot.classList.add('dot');\r\n        dottesArea.append(dot);\r\n\r\n        if (i == 0) {\r\n            dot.style.opacity = 1;\r\n        }\r\n        dots.push(dot);\r\n    }\r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n            slideIndex = slideTo;\r\n            // offset = +width.replace(/\\D/g, '') * (slideTo - 1);\r\n            offset = delNotDigits(width) * (slideTo - 1);\r\n            \r\n\r\n            changeSlide(slideIndex, offset);\r\n        });\r\n    });\r\n\r\n    fetch('https://jsonplaceholder.typicode.com/posts', {\r\n        method: 'POST',\r\n        body: JSON.stringify({name: 'Alex'}),\r\n        headers: {\r\n            'Content-type': 'application/json'\r\n        }\r\n    })\r\n    .then(response => response.json())\r\n    .then(json => console.log(json));\r\n\r\n\r\n    // привязка локального json сервера\r\n    // в терминале набираем npx json-server db.json и берем оттуда ссылку\r\n    fetch('http://localhost:3000/menu')\r\n        .then(data => data.json())\r\n        .then(res => console.log(res));\r\n}\r\n\r\nmodule.exports = slider;\r\n","function tabs() {\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // TABS\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    const tabs = document.querySelectorAll('.tabheader__item'),\r\n          tabsContent = document.querySelectorAll('.tabcontent'),\r\n          tabsParent = document.querySelector('.tabheader__items');\r\n\r\n    function hideTabContent() {\r\n        tabsContent.forEach(item => {\r\n            // item.style.display = 'none'; // вариант через inline стили\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach(item => {\r\n            item.classList.remove('tabheader__item_active');\r\n        });\r\n    }\r\n\r\n    function showTabContent(i = 0) { // если функция вызывается без аргумента (showTabContent()), то i = 0\r\n        // tabsContent[i].style.display = 'block'; // вариант через inline стили\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add('tabheader__item_active');\r\n    }\r\n\r\n    hideTabContent();\r\n    showTabContent();\r\n\r\n    tabsParent.addEventListener('click', (e) => {\r\n        const target = e.target;\r\n\r\n        if (target && target.classList.contains('tabheader__item')) {\r\n            tabs.forEach((item, i) => {\r\n                if (target == item) {\r\n                    hideTabContent();\r\n                    showTabContent(i); \r\n                }\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nmodule.exports = tabs;","function timer() {\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    // TIMER\r\n    ///////////////////////////////////////////////////////////////////////////\r\n\r\n    const deadline = '2022-01-01';\r\n\r\n    function getTimeRemaining(endtime) {\r\n        const t = Date.parse(endtime) - Date.parse(new Date()),\r\n        // в Date.parse получаем кол-во мс, t = конечное время минус время сейчас\r\n              days = Math.floor(t / (1000 * 60 * 60 * 24)),\r\n              hours = Math.floor((t / (1000 * 60 * 60) % 24)),\r\n              minutes = Math.floor((t / 1000 / 60) % 60),\r\n              seconds = Math.floor((t / 1000) % 60);\r\n\r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };\r\n    }\r\n\r\n    // функция добавление \"0\", если число меньше 10\r\n    function getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector),\r\n              days = timer.querySelector('#days'),\r\n              hours = timer.querySelector('#hours'),\r\n              minutes = timer.querySelector('#minutes'),\r\n              seconds = timer.querySelector('#seconds'),\r\n              timeInterval = setInterval(updateClock, 1000);\r\n\r\n        updateClock(); // убираем мигание верстки, выполняем функцию updateClock сразу, а не через 1000 мс (1 сек)\r\n        // при первоначальном запуске подставляются значения с верстки и только через секунду происходит обновление\r\n\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime);\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n    setClock('.timer', deadline);\r\n}\r\n\r\nmodule.exports = timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","'use strict';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {    \r\n    const tabs = require('./modules/tabs'),\r\n          modal = require('./modules/modal'),\r\n          timer = require('./modules/timer'),\r\n          cards = require('./modules/cards'),\r\n          calc = require('./modules/calc'),\r\n          forms = require('./modules/forms'),\r\n          slider = require('./modules/slider');\r\n\r\n    tabs();\r\n    modal();\r\n    timer();\r\n    cards();\r\n    calc();\r\n    forms();\r\n    slider();\r\n    \r\n});"],"sourceRoot":""}